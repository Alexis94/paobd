@startuml
interface AbstractDAO {
    - select(HashTable clauses, HashTable predicates)
    - update(HashTable clauses, HashTable predicates)
    - delete(HashTable clauses, HashTable predicates)
    - insert(HashTable clauses, HashTable predicates)
}

class Titre {
    - String nom
    - Integer duree
    - GENRE_MUSIQUE genre
    - Artiste auteur
    - Album alb
    + String getNom()
    + void setNom(String nom)
    + Integer getDuree()
    + void setDuree(Integer duree)
    + Genre getGenre()
    + void setGenre(genre g
    + Artiste getArtiste()
    + void setArtiste(Artiste a)
    + Album getAlbum()
    + void setAlbum(Album a)
}

class Album {
    - String nom
    - Integer annee
    - Artiste artiste
    - Titres[] titres
    - Integer duree
    + String getNom()
    + void setNom(String nom)
    + Integer getDuree()
    + void setDuree(Integer duree)
    + Integer getAnnee()
    + void setAnnee(Integer annee)
    + Titres[] getTitres()
    + void ajouterTitre(Titre t)
    + void retirerTitre(Titre t)
    + Artiste getArtiste()
    + void setArtiste(String nomArtiste)
    + void retirerArtiste(Artiste artiste)
    + Integer getDuree()
    + void setDuree(Integer duree)
}

class Artiste {
    - String nom
    - String nationalite
    - Titre[] titres
    - Album[] albums
    + String getNom()
    + void setNom(String nom)
    + String getNationalite()
    + void setNationalite(String nom)
    + Titre[] getTitres()
    + void ajouterTitre(Titre t)
    + void retirerTitre(Titre t)
    + Album[] getAlbums()
    + void ajouterAlbum(Album a)
    + void retirerAlbum(Album a)
}

class Playlist {
    - String id
    - String nom
    - Titres[] titres
    - Integer duree
    - User user
    + String getId()
    + void setId(String id)
    + String getNom()
    + void setNom(String nom)
    + User getUser()
    + void setUser(User user)
    + Titre[] getTitres()
    + void ajouterTitre(Titre titre)
    + void retirerTitre(Titre titre)
    + Integer getDuree()
    + void setDuree(Integer duree)
}

class User {
    - String pseudo
    - String nom
    - String prenom
    - Integer age
    - Titre[] titres
    - Album[] albums
    - Artiste[] artistes
    - Playlist[] playlists
    - Ecoute[] ecoutes
    + String getPseudo()
    + void setPseudo(String pseudo)
    + String getNom()
    + void setNom(String nom)
    + String getPrenom()
    + void setPrenom(String prenom)
    + Integer getAge()
    + void setAge(Integer age)
    + Titre[] getTitres()
    + void ajouterTitre(Titre t)
    + void retirerTitre(Titre t)
    + Artiste[] getArtistes()
    + void ajouterArtiste(Artiste a)
    + void retirerArtiste(Artiste a)
    + Album[] getAlbums()
    + void ajouterAlbum(Album a)
    + void retirerAlbum(Album a)
    + Playlist[] getPlaylists()
    + void ajouterPlaylist(Playlist p)
    + void retirerPlaylist(Playlist p)
    + Ecoute[] getEcoutes()
    + void ajouterEcoute(Ecoute e)
}

class Ecoute {
    + Date dateEcoute
    + Titre Titre
    + Date getDate()
    + void setDate(Date d)
    + Titre getTitre()
    + void setTitre(Titre t)
}

class TitreDAO {
    - select(HashTable clauses, HashTable predicates)
    - update(HashTable clauses, HashTable predicates)
    - delete(HashTable clauses, HashTable predicates)
    - insert(HashTable clauses, HashTable predicates)
    + Titre[] getTitresUser(String pseudo)
    + Titre[] getTitresAlbum(String nomAlbum)
    + Titre[] getTitresArtiste(String nomArtiste)
    + Titre[] getTitresPlaylist(String idPlaylist)
    + Titre ajouterTitre(Titre t)
    + bool supprimerTitre(String titreId)
    + Titre editerTitre(Titre t)
}

class ArtisteDAO {
    - select(HashTable clauses, HashTable predicates)
    - update(HashTable clauses, HashTable predicates)
    - delete(HashTable clauses, HashTable predicates)
    - insert(HashTable clauses, HashTable predicates)
    + Artiste ajouterArtiste(Artiste a)
    + bool supprimerArtiste(String nomArtiste)
    + Artiste editerArtiste(Artiste a)
    + Artistes[] getArtistesUser(String pseudo)
}

class AlbumDAO {
    - select(HashTable clauses, HashTable predicates)
    - update(HashTable clauses, HashTable predicates)
    - delete(HashTable clauses, HashTable predicates)
    - insert(HashTable clauses, HashTable predicates)
    + Album ajouterAlbum(Album a)
    + Album editerAlbum(Album a)
    + Album ajouterTitre(String nomAlbum, String titreId)
    + Album supprimerTitre(String nomAlbum, String titreId)
    + bool supprimerAlbum(String nomAlbum)
    + Album ajouterArtiste(String nomArtiste, String nomAlbum)
    + Albums[] getAlbumsUser(String pseudo)
}

class PlaylistDAO {
    - select(HashTable clauses, HashTable predicates)
    - update(HashTable clauses, HashTable predicates)
    - delete(HashTable clauses, HashTable predicates)
    - insert(HashTable clauses, HashTable predicates)
    + Playlist ajouterPlaylist(Playlist p)
    + Playlist supprimerPlaylist(String playlistId)
    + Playlist editerPlaylist(Playlist p
    + Playlist ajouterTitre(String titreId, String playlistId)
    + Playlist retirerTitre(String titreId, String playlistId)
}

class EcouteDAO {
    - select(HashTable clauses, HashTable predicates)
    - update(HashTable clauses, HashTable predicates)
    - delete(HashTable clauses, HashTable predicates)
    - insert(HashTable clauses, HashTable predicates)
    + Ecoute ajouterEcoute(Ecoute e)
    + bool supprimerEcoute(Ecoute e)
    + Ecoute editerEcoute(ecoute e)
}

class UserDAO {
    - select(HashTable clauses, HashTable predicates)
    - update(HashTable clauses, HashTable predicates)
    - delete(HashTable clauses, HashTable predicates)
    - insert(HashTable clauses, HashTable predicates)
    + User ajouterUser(User u)
    + bool supprimerUser(String pseudo)
    + User editerUser(User)
    + User ajouterTitre(String titreId, String userId)
    + User ajouterAlbum(String nomAlbum, String userId)
    + User ajouterArtiste(String nomArtiste, String userId)
    + User supprimerTitre(String titreId, String userId)
    + User supprimerAlbum(String nomAlbum, String userId)
    + User supprimerArtiste(String nomArtiste, String userId)
    + User ajouterPlaylist(String playlistId, String userId)
}

class Application {
    + main()
}


Album "1" o-- "many" Titre
Artiste "1" o-- "many" Titre
User "1" o-- "many" Titre
User "1" o-- "many" Album
User "1" o-- "many" Artiste
User "1" o-- "many" Playlist
User "1" o-- "many" Ecoute
Playlist "1" o-- "many" Titre
Ecoute "1" *-- "1" Titre
Artiste "1" -- "many" Album

AbstractDAO <-- TitreDAO : implements
AbstractDAO <-- ArtisteDAO : implements
AbstractDAO <-- AlbumDAO : implements
AbstractDAO <-- PlaylistDAO : implements
AbstractDAO <-- EcouteDAO : implements
AbstractDAO <-- UserDAO : implements

Titre <-- TitreDAO : uses
Artiste <-- ArtisteDAO : uses
Album <-- AlbumDAO : uses
Playlist <-- PlaylistDAO : uses
Ecoute <-- EcouteDAO : uses
User <-- UserDAO : uses

TitreDAO <-- Application : uses
ArtisteDAO <-- Application : uses
AlbumDAO <-- Application : uses
PlaylistDAO <-- Application : uses
EcouteDAO <-- Application : uses
UserDAO <-- Application : uses



@enduml
